/* 
 		1. 클래스 구성 요소
 		class ClassName
 		{
 		--------------------
 		 변수(인스턴스, 멤버, 공유)
 		 	= 따로 저장되는 변수 (인스턴스 변수 => new)
 		 	= 공통 저장 변수 (컴파일러에 의해 자동 생성) => 한개의 메모리만 생성
 		--------------------
 		 메소드(멤버메소드) => static이 없는 메소드
 		--------------------
 		 생성자 : 멤버변수의 초기화, 객체 생성시에 호출되는 메소드
 		--------------------
 		}
 		
 		****** class 블럭에서는 연산자, 제어문을 사용할 수 없다
 				선언만 가능하다. 변수값을 지정할때는 선언과 동시에 설정한다
 				
 	---------------------------------------------------------------------------
 	1. 객체지향 프로그램 (OOP)
 		= 여러개의 클래스를 만들어서 => 조립하는 프로그램 => CBD
 		예) 웹사이트
 			회원: 회원가입 , 회원탈퇴 , 회원 수정 , 로그인 , 로그아웃 , 아이디찾기 ...
 			게시판: 글쓰기 , 수정 , 상세보기 , 삭제 , 찾기 ...
 			맛집: 목록 , 상세보기, 댓글 , 찾기 , 추천 , 예약 ...
 			---------------------------------------------------------
 			메뉴 
 	2. 객체 (객체지향의 객체?, 객체지향의 특성(캡슐화,다형성,추상화,상속))
 	   ---
 	   물리적으로 존재하는 것 (눈에 보인다)
 	   예) 자동차 , 사람 , 책 ...
 	   		
 	   추상적인 것 (회사, 날씨, 동물...게임) => 속성 , 동작
 	   ==> 자바에서 모델링 : 변수/메소드
 	   
 	   
 	   집 만들기
 	   설계 ====> 완성(활용)(메모리에 저장)
 	   --		------
 	   class	 객체
 				
 	 => 하나의 클래스로부터 여러개의 객체를 생성가능하다
 	 => 클래스는 한개에 대한 정보를 가지고 있다
 	 => 데이터 따로 저장하기 위해서는 new 연산자를 이용한다
 	 	=> new는새로운 메모리 공간을 만들어 준다
 	 	=> 사용법
 	 		new 클래스명()
 	 		class A
 	 		A a = new A()
 	 		A a;
 	 		a = new A()
 	 		
 	 		--------------------
 	 		
 	 		class A {
 	 			int a;
 	 			int b;
 	 			String s;
 	 			static int d;
 	 		}
 	 		-------------------
 	 		
 	 		변수
 	 		이름
 	 		성별
 	 		나이
 	 			class Human
 	 			{
 	 				String name;
 	 				String sex;
 	 				int agel
 	 			}
 	 		---------
 	 		
 */

public class 클래스_변수정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
